import asyncio

from aiogram import types

from applications.hi_tech_news import get_news_and_save_bd
from applications.work_with_bd import get_data_from_db
from loader import dp


@dp.message_handler(commands=['get_news'], state=None)
async def get_news(message: types.Message):
    get_news_and_save_bd()
    data = get_data_from_db()
    for d in data:
        await message.answer(f'–ù–æ–≤–æ—Å—Ç—å üìß:\n{d[0]}\n–°—Å—ã–ª–∫–∞:\n{d[1]}')



@dp.message_handler(commands=['get_fresh_news'], state=None)
async def get_fresh_news(message: types.Message):
    fresh_news = get_news_and_save_bd()
    #await message.answer(f'–ù–æ–≤–æ—Å—Ç—å:\n{len(fresh_news)}')
    if len(fresh_news) == 0:
        await message.reply("–ù–µ—Ç—É —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π ‚è∞")
    else:
        for f in fresh_news:
            await message.answer(f'–ù–æ–≤–æ—Å—Ç—å üóû:\n{f["title"]}\n{f["link"]}')


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
# from loader import bot
# async def news_every_time():
#     # –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
#     while True:
#         fresh_news = get_news_and_save_bd()
#         if len(fresh_news) >= 1:
#             for f in fresh_news:
#                 await bot.send_message('456110449', f'–ù–æ–≤–æ—Å—Ç—å:\n{f["link"]}', )
#         else:
#             text = '–Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç'
#             await bot.send_message('456110449', text)
#         await asyncio.sleep(20)